//アクセス許可の判定用フラグを全てfalseで初期化しておく。
var group_flag = false;
var role_flag = false;
var new_record_flag = false;
var dept_flag = false;
var wlist_id_flag = false;
var wlist_email_flag = false;
var caller_flag = false;

//ログインユーザーのIDとメールアドレスを取得
var user_id = gs.getUserID(); //sets u to ID of current user
var user_email = gs.getUser().getEmail();

//ログインユーザーの部署名を取得
var gr= new GlideRecord('sys_user');
gr.get(user_id);
var dept_id = gr.department;
var dept_name = dept_id.name;

//フラグを設定
group_flag = gs.getUser().isMemberOf(current.parent_incident.assignment_group.toString());
role_flag = gs.hasRole("x_ir_test.admin, x_ir_test.user");
new_record_flag = current.isNewRecord();

//s担当ロールがある時だけ、影響部署がユーザーの部署と同じかをチェックしてフラグを立てる。
//一般ユーザーが自部署のレコードを全部見られてはまずいので。
if (gs.hasRole("ir_test_s")) {
    if (current.parent_incident.affected_dept == dept_name) {
        dept_flag = true;
    }
}
//watchlistが空じゃない時だけ実行。からの場合は動作は不定
if(!current.parent_incident.watch_list.nil()){
   wlist_id_flag = (current.parent_incident.watch_list.indexOf(user_id) != -1) ;

  //メールアドレスが空じゃないときだけ実行。空の場合は動作は不定
   if(user_email != ""){
     wlist_email_flag = (current.parent_incident.watch_list.indexOf(user_email) != -1);
   }
}

if (current.parent_incident.caller == user_id){
	caller_flag = true;
}

//最後に全部のフラグで判定。一つでもtrueならanswerをtrueにする。
if(group_flag || role_flag || new_record_flag || dept_flag || wlist_id_flag || wlist_email_flag || caller_flag){
	answer = true;
} else{
    answer = false;
}
